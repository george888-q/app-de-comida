{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wowga\\\\OneDrive\\\\Documents\\\\proyectos personales\\\\app de comida\\\\src\\\\contexts\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAccessibility } from './AccessibilityContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart debe ser usado dentro de un CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const {\n    speak\n  } = useAccessibility();\n\n  // Cargar carrito desde localStorage\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      setCart(JSON.parse(savedCart));\n    }\n    const savedOrders = localStorage.getItem('orders');\n    if (savedOrders) {\n      setOrders(JSON.parse(savedOrders));\n    }\n  }, []);\n\n  // Guardar carrito en localStorage\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }, [cart]);\n\n  // Guardar pedidos en localStorage\n  useEffect(() => {\n    localStorage.setItem('orders', JSON.stringify(orders));\n  }, [orders]);\n\n  // Agregar producto al carrito\n  const addToCart = (product, quantity = 1) => {\n    setCart(prevCart => {\n      const existingProduct = prevCart.find(item => item.id === product.id);\n      if (existingProduct) {\n        const updatedCart = prevCart.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n        speak(`Agregado ${quantity} más de ${product.name} al carrito`);\n        return updatedCart;\n      } else {\n        const newCart = [...prevCart, {\n          ...product,\n          quantity\n        }];\n        speak(`${product.name} agregado al carrito`);\n        return newCart;\n      }\n    });\n  };\n\n  // Remover producto del carrito\n  const removeFromCart = productId => {\n    setCart(prevCart => {\n      const product = prevCart.find(item => item.id === productId);\n      const newCart = prevCart.filter(item => item.id !== productId);\n      if (product) {\n        speak(`${product.name} removido del carrito`);\n      }\n      return newCart;\n    });\n  };\n\n  // Actualizar cantidad de producto\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCart(prevCart => prevCart.map(item => item.id === productId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // Limpiar carrito\n  const clearCart = () => {\n    setCart([]);\n    speak('Carrito vaciado');\n  };\n\n  // Calcular total del carrito\n  const getCartTotal = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Calcular cantidad total de items\n  const getCartItemCount = () => {\n    return cart.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  // Crear nuevo pedido\n  const createOrder = (deliveryInfo, paymentMethod) => {\n    const newOrder = {\n      id: Date.now().toString(),\n      items: [...cart],\n      total: getCartTotal(),\n      deliveryInfo,\n      paymentMethod,\n      status: 'preparando',\n      createdAt: new Date().toISOString(),\n      estimatedDelivery: new Date(Date.now() + 30 * 60 * 1000).toISOString() // 30 minutos\n    };\n    setOrders(prevOrders => [newOrder, ...prevOrders]);\n    setCart([]);\n    speak(`Pedido confirmado. Tu pedido será entregado en aproximadamente 30 minutos. Número de pedido: ${newOrder.id}`);\n    return newOrder;\n  };\n\n  // Actualizar estado del pedido\n  const updateOrderStatus = (orderId, status) => {\n    setOrders(prevOrders => prevOrders.map(order => order.id === orderId ? {\n      ...order,\n      status\n    } : order));\n  };\n\n  // Obtener pedido por ID\n  const getOrderById = orderId => {\n    return orders.find(order => order.id === orderId);\n  };\n  const value = {\n    cart,\n    orders,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartTotal,\n    getCartItemCount,\n    createOrder,\n    updateOrderStatus,\n    getOrderById\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"d/BreSwdjdQAyBcZj8LSRatKpI0=\", false, function () {\n  return [useAccessibility];\n});\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAccessibility","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","orders","setOrders","speak","savedCart","localStorage","getItem","JSON","parse","savedOrders","setItem","stringify","addToCart","product","quantity","prevCart","existingProduct","find","item","id","updatedCart","map","name","newCart","removeFromCart","productId","filter","updateQuantity","clearCart","getCartTotal","reduce","total","price","getCartItemCount","createOrder","deliveryInfo","paymentMethod","newOrder","Date","now","toString","items","status","createdAt","toISOString","estimatedDelivery","prevOrders","updateOrderStatus","orderId","order","getOrderById","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wowga/OneDrive/Documents/proyectos personales/app de comida/src/contexts/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useAccessibility } from './AccessibilityContext';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart debe ser usado dentro de un CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n  const { speak } = useAccessibility();\r\n\r\n  // Cargar carrito desde localStorage\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      setCart(JSON.parse(savedCart));\r\n    }\r\n    \r\n    const savedOrders = localStorage.getItem('orders');\r\n    if (savedOrders) {\r\n      setOrders(JSON.parse(savedOrders));\r\n    }\r\n  }, []);\r\n\r\n  // Guardar carrito en localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  // Guardar pedidos en localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('orders', JSON.stringify(orders));\r\n  }, [orders]);\r\n\r\n  // Agregar producto al carrito\r\n  const addToCart = (product, quantity = 1) => {\r\n    setCart(prevCart => {\r\n      const existingProduct = prevCart.find(item => item.id === product.id);\r\n      \r\n      if (existingProduct) {\r\n        const updatedCart = prevCart.map(item =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + quantity }\r\n            : item\r\n        );\r\n        speak(`Agregado ${quantity} más de ${product.name} al carrito`);\r\n        return updatedCart;\r\n      } else {\r\n        const newCart = [...prevCart, { ...product, quantity }];\r\n        speak(`${product.name} agregado al carrito`);\r\n        return newCart;\r\n      }\r\n    });\r\n  };\r\n\r\n  // Remover producto del carrito\r\n  const removeFromCart = (productId) => {\r\n    setCart(prevCart => {\r\n      const product = prevCart.find(item => item.id === productId);\r\n      const newCart = prevCart.filter(item => item.id !== productId);\r\n      if (product) {\r\n        speak(`${product.name} removido del carrito`);\r\n      }\r\n      return newCart;\r\n    });\r\n  };\r\n\r\n  // Actualizar cantidad de producto\r\n  const updateQuantity = (productId, quantity) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId);\r\n      return;\r\n    }\r\n    \r\n    setCart(prevCart =>\r\n      prevCart.map(item =>\r\n        item.id === productId\r\n          ? { ...item, quantity }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  // Limpiar carrito\r\n  const clearCart = () => {\r\n    setCart([]);\r\n    speak('Carrito vaciado');\r\n  };\r\n\r\n  // Calcular total del carrito\r\n  const getCartTotal = () => {\r\n    return cart.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n  };\r\n\r\n  // Calcular cantidad total de items\r\n  const getCartItemCount = () => {\r\n    return cart.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  // Crear nuevo pedido\r\n  const createOrder = (deliveryInfo, paymentMethod) => {\r\n    const newOrder = {\r\n      id: Date.now().toString(),\r\n      items: [...cart],\r\n      total: getCartTotal(),\r\n      deliveryInfo,\r\n      paymentMethod,\r\n      status: 'preparando',\r\n      createdAt: new Date().toISOString(),\r\n      estimatedDelivery: new Date(Date.now() + 30 * 60 * 1000).toISOString(), // 30 minutos\r\n    };\r\n\r\n    setOrders(prevOrders => [newOrder, ...prevOrders]);\r\n    setCart([]);\r\n    \r\n    speak(`Pedido confirmado. Tu pedido será entregado en aproximadamente 30 minutos. Número de pedido: ${newOrder.id}`);\r\n    \r\n    return newOrder;\r\n  };\r\n\r\n  // Actualizar estado del pedido\r\n  const updateOrderStatus = (orderId, status) => {\r\n    setOrders(prevOrders =>\r\n      prevOrders.map(order =>\r\n        order.id === orderId\r\n          ? { ...order, status }\r\n          : order\r\n      )\r\n    );\r\n  };\r\n\r\n  // Obtener pedido por ID\r\n  const getOrderById = (orderId) => {\r\n    return orders.find(order => order.id === orderId);\r\n  };\r\n\r\n  const value = {\r\n    cart,\r\n    orders,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getCartTotal,\r\n    getCartItemCount,\r\n    createOrder,\r\n    updateOrderStatus,\r\n    getOrderById,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}