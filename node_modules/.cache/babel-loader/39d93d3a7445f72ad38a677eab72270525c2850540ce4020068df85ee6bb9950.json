{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wowga\\\\OneDrive\\\\Documents\\\\proyectos personales\\\\app de comida\\\\src\\\\contexts\\\\AccessibilityContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccessibilityContext = /*#__PURE__*/createContext();\nexport const useAccessibility = () => {\n  _s();\n  const context = useContext(AccessibilityContext);\n  if (!context) {\n    throw new Error('useAccessibility debe ser usado dentro de un AccessibilityProvider');\n  }\n  return context;\n};\n_s(useAccessibility, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AccessibilityProvider = ({\n  children\n}) => {\n  _s2();\n  const [colorMode, setColorMode] = useState('normal'); // normal, deuteranopia, protanopia, tritanopia, highContrast\n  const [fontSize, setFontSize] = useState('base'); // xs, sm, base, lg, xl, 2xl, 3xl\n  const [voiceAssistant, setVoiceAssistant] = useState(false);\n  const [speechRecognition, setSpeechRecognition] = useState(null);\n  const [speechSynthesis, setSpeechSynthesis] = useState(null);\n  const [isListening, setIsListening] = useState(false);\n\n  // Inicializar Web Speech API\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = false;\n      recognition.lang = 'es-ES';\n      recognition.onstart = () => {\n        setIsListening(true);\n        speak('Te escucho. Di un comando.', true);\n        vibrate();\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[event.results.length - 1][0].transcript.toLowerCase();\n        handleVoiceCommand(transcript);\n      };\n      recognition.onerror = event => {\n        console.error('Error en reconocimiento de voz:', event.error);\n        setIsListening(false);\n        speak('Hubo un error con el asistente de voz. Intenta de nuevo.');\n        vibrate([200, 100, 200]);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      setSpeechRecognition(recognition);\n    }\n    if ('speechSynthesis' in window) {\n      setSpeechSynthesis(window.speechSynthesis);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Aplicar cambios de accesibilidad al DOM\n  useEffect(() => {\n    const root = document.documentElement;\n\n    // Remover clases anteriores\n    root.classList.remove('deuteranopia', 'protanopia', 'tritanopia', 'high-contrast');\n\n    // Aplicar nueva clase\n    if (colorMode !== 'normal') {\n      root.classList.add(colorMode);\n    }\n\n    // Aplicar tamaño de fuente\n    const fontSizeClasses = {\n      xs: 'text-xs',\n      sm: 'text-sm',\n      base: 'text-base',\n      lg: 'text-lg',\n      xl: 'text-xl',\n      '2xl': 'text-2xl',\n      '3xl': 'text-3xl'\n    };\n\n    // Remover clases de tamaño anteriores\n    Object.values(fontSizeClasses).forEach(className => {\n      root.classList.remove(className);\n    });\n\n    // Aplicar nuevo tamaño\n    if (fontSizeClasses[fontSize]) {\n      root.classList.add(fontSizeClasses[fontSize]);\n    }\n  }, [colorMode, fontSize]);\n\n  // Función para hablar\n  const speak = (text, force = false) => {\n    if (speechSynthesis && (voiceAssistant || force)) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = 'es-ES';\n      utterance.rate = 0.9;\n      utterance.pitch = 1;\n      speechSynthesis.speak(utterance);\n    }\n  };\n\n  // Función para vibrar\n  const vibrate = (pattern = 100) => {\n    if ('vibrate' in navigator) {\n      navigator.vibrate(pattern);\n    }\n  };\n\n  // Manejar comandos de voz\n  const handleVoiceCommand = command => {\n    console.log('Comando recibido:', command);\n    speak(`Comando: ${command}`);\n    vibrate(50);\n\n    // Comandos básicos sin navegación\n    if (command.includes('cambiar') && command.includes('modo')) {\n      if (command.includes('deuteranopia')) {\n        setColorMode('deuteranopia');\n        speak('Cambiando a modo deuteranopia.');\n      } else if (command.includes('protanopia')) {\n        setColorMode('protanopia');\n        speak('Cambiando a modo protanopia.');\n      } else if (command.includes('tritanopia')) {\n        setColorMode('tritanopia');\n        speak('Cambiando a modo tritanopia.');\n      } else if (command.includes('alto contraste')) {\n        setColorMode('highContrast');\n        speak('Cambiando a modo alto contraste.');\n      }\n    } else if (command.includes('tamaño') && command.includes('letra')) {\n      if (command.includes('subir') || command.includes('aumentar')) {\n        const sizes = ['xs', 'sm', 'base', 'lg', 'xl', '2xl', '3xl'];\n        const currentIndex = sizes.indexOf(fontSize);\n        if (currentIndex < sizes.length - 1) {\n          setFontSize(sizes[currentIndex + 1]);\n          speak('Aumentando el tamaño de letra.');\n        }\n      } else if (command.includes('bajar') || command.includes('disminuir')) {\n        const sizes = ['xs', 'sm', 'base', 'lg', 'xl', '2xl', '3xl'];\n        const currentIndex = sizes.indexOf(fontSize);\n        if (currentIndex > 0) {\n          setFontSize(sizes[currentIndex - 1]);\n          speak('Disminuyendo el tamaño de letra.');\n        }\n      }\n    } else {\n      speak('Comando recibido. Funcionalidad de navegación temporalmente deshabilitada.');\n    }\n  };\n\n  // Iniciar reconocimiento de voz\n  const startListening = () => {\n    if (speechRecognition && voiceAssistant) {\n      speechRecognition.start();\n    }\n  };\n\n  // Detener reconocimiento de voz\n  const stopListening = () => {\n    if (speechRecognition) {\n      speechRecognition.stop();\n    }\n  };\n\n  // Alternar asistente de voz\n  const toggleVoiceAssistant = () => {\n    const newState = !voiceAssistant;\n    setVoiceAssistant(newState);\n    if (newState) {\n      speak('Asistente de voz activado. Di \"ayuda\" para ver los comandos disponibles.', true);\n      vibrate();\n    } else {\n      stopListening();\n      speak('Asistente de voz desactivado.', true);\n      vibrate();\n    }\n  };\n  const value = {\n    colorMode,\n    setColorMode,\n    fontSize,\n    setFontSize,\n    voiceAssistant,\n    toggleVoiceAssistant,\n    isListening,\n    startListening,\n    stopListening,\n    speak,\n    handleVoiceCommand,\n    vibrate\n  };\n  return /*#__PURE__*/_jsxDEV(AccessibilityContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s2(AccessibilityProvider, \"7sCMa1uxvpg4PfkQlVyfuocnSFc=\");\n_c = AccessibilityProvider;\nvar _c;\n$RefreshReg$(_c, \"AccessibilityProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AccessibilityContext","useAccessibility","_s","context","Error","AccessibilityProvider","children","_s2","colorMode","setColorMode","fontSize","setFontSize","voiceAssistant","setVoiceAssistant","speechRecognition","setSpeechRecognition","speechSynthesis","setSpeechSynthesis","isListening","setIsListening","window","SpeechRecognition","webkitSpeechRecognition","recognition","continuous","interimResults","lang","onstart","speak","vibrate","onresult","event","transcript","results","length","toLowerCase","handleVoiceCommand","onerror","console","error","onend","root","document","documentElement","classList","remove","add","fontSizeClasses","xs","sm","base","lg","xl","Object","values","forEach","className","text","force","utterance","SpeechSynthesisUtterance","rate","pitch","pattern","navigator","command","log","includes","sizes","currentIndex","indexOf","startListening","start","stopListening","stop","toggleVoiceAssistant","newState","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/wowga/OneDrive/Documents/proyectos personales/app de comida/src/contexts/AccessibilityContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AccessibilityContext = createContext();\n\nexport const useAccessibility = () => {\n  const context = useContext(AccessibilityContext);\n  if (!context) {\n    throw new Error('useAccessibility debe ser usado dentro de un AccessibilityProvider');\n  }\n  return context;\n};\n\nexport const AccessibilityProvider = ({ children }) => {\n  const [colorMode, setColorMode] = useState('normal'); // normal, deuteranopia, protanopia, tritanopia, highContrast\n  const [fontSize, setFontSize] = useState('base'); // xs, sm, base, lg, xl, 2xl, 3xl\n  const [voiceAssistant, setVoiceAssistant] = useState(false);\n  const [speechRecognition, setSpeechRecognition] = useState(null);\n  const [speechSynthesis, setSpeechSynthesis] = useState(null);\n  const [isListening, setIsListening] = useState(false);\n\n  // Inicializar Web Speech API\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      \n      recognition.continuous = true;\n      recognition.interimResults = false;\n      recognition.lang = 'es-ES';\n      \n      recognition.onstart = () => {\n        setIsListening(true);\n        speak('Te escucho. Di un comando.', true);\n        vibrate();\n      };\n      \n      recognition.onresult = (event) => {\n        const transcript = event.results[event.results.length - 1][0].transcript.toLowerCase();\n        handleVoiceCommand(transcript);\n      };\n      \n      recognition.onerror = (event) => {\n        console.error('Error en reconocimiento de voz:', event.error);\n        setIsListening(false);\n        speak('Hubo un error con el asistente de voz. Intenta de nuevo.');\n        vibrate([200, 100, 200]);\n      };\n      \n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      \n      setSpeechRecognition(recognition);\n    }\n\n    if ('speechSynthesis' in window) {\n      setSpeechSynthesis(window.speechSynthesis);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Aplicar cambios de accesibilidad al DOM\n  useEffect(() => {\n    const root = document.documentElement;\n    \n    // Remover clases anteriores\n    root.classList.remove('deuteranopia', 'protanopia', 'tritanopia', 'high-contrast');\n    \n    // Aplicar nueva clase\n    if (colorMode !== 'normal') {\n      root.classList.add(colorMode);\n    }\n    \n    // Aplicar tamaño de fuente\n    const fontSizeClasses = {\n      xs: 'text-xs',\n      sm: 'text-sm',\n      base: 'text-base',\n      lg: 'text-lg',\n      xl: 'text-xl',\n      '2xl': 'text-2xl',\n      '3xl': 'text-3xl',\n    };\n    \n    // Remover clases de tamaño anteriores\n    Object.values(fontSizeClasses).forEach(className => {\n      root.classList.remove(className);\n    });\n    \n    // Aplicar nuevo tamaño\n    if (fontSizeClasses[fontSize]) {\n      root.classList.add(fontSizeClasses[fontSize]);\n    }\n  }, [colorMode, fontSize]);\n\n  // Función para hablar\n  const speak = (text, force = false) => {\n    if (speechSynthesis && (voiceAssistant || force)) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.lang = 'es-ES';\n      utterance.rate = 0.9;\n      utterance.pitch = 1;\n      speechSynthesis.speak(utterance);\n    }\n  };\n\n  // Función para vibrar\n  const vibrate = (pattern = 100) => {\n    if ('vibrate' in navigator) {\n      navigator.vibrate(pattern);\n    }\n  };\n\n  // Manejar comandos de voz\n  const handleVoiceCommand = (command) => {\n    console.log('Comando recibido:', command);\n    speak(`Comando: ${command}`);\n    vibrate(50);\n    \n    // Comandos básicos sin navegación\n    if (command.includes('cambiar') && command.includes('modo')) {\n      if (command.includes('deuteranopia')) {\n        setColorMode('deuteranopia');\n        speak('Cambiando a modo deuteranopia.');\n      } else if (command.includes('protanopia')) {\n        setColorMode('protanopia');\n        speak('Cambiando a modo protanopia.');\n      } else if (command.includes('tritanopia')) {\n        setColorMode('tritanopia');\n        speak('Cambiando a modo tritanopia.');\n      } else if (command.includes('alto contraste')) {\n        setColorMode('highContrast');\n        speak('Cambiando a modo alto contraste.');\n      }\n    } else if (command.includes('tamaño') && command.includes('letra')) {\n      if (command.includes('subir') || command.includes('aumentar')) {\n        const sizes = ['xs', 'sm', 'base', 'lg', 'xl', '2xl', '3xl'];\n        const currentIndex = sizes.indexOf(fontSize);\n        if (currentIndex < sizes.length - 1) {\n          setFontSize(sizes[currentIndex + 1]);\n          speak('Aumentando el tamaño de letra.');\n        }\n      } else if (command.includes('bajar') || command.includes('disminuir')) {\n        const sizes = ['xs', 'sm', 'base', 'lg', 'xl', '2xl', '3xl'];\n        const currentIndex = sizes.indexOf(fontSize);\n        if (currentIndex > 0) {\n          setFontSize(sizes[currentIndex - 1]);\n          speak('Disminuyendo el tamaño de letra.');\n        }\n      }\n    } else {\n      speak('Comando recibido. Funcionalidad de navegación temporalmente deshabilitada.');\n    }\n  };\n\n  // Iniciar reconocimiento de voz\n  const startListening = () => {\n    if (speechRecognition && voiceAssistant) {\n      speechRecognition.start();\n    }\n  };\n\n  // Detener reconocimiento de voz\n  const stopListening = () => {\n    if (speechRecognition) {\n      speechRecognition.stop();\n    }\n  };\n\n  // Alternar asistente de voz\n  const toggleVoiceAssistant = () => {\n    const newState = !voiceAssistant;\n    setVoiceAssistant(newState);\n    \n    if (newState) {\n      speak('Asistente de voz activado. Di \"ayuda\" para ver los comandos disponibles.', true);\n      vibrate();\n    } else {\n      stopListening();\n      speak('Asistente de voz desactivado.', true);\n      vibrate();\n    }\n  };\n\n  const value = {\n    colorMode,\n    setColorMode,\n    fontSize,\n    setFontSize,\n    voiceAssistant,\n    toggleVoiceAssistant,\n    isListening,\n    startListening,\n    stopListening,\n    speak,\n    handleVoiceCommand,\n    vibrate,\n  };\n\n  return (\n    <AccessibilityContext.Provider value={value}>\n      {children}\n    </AccessibilityContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}